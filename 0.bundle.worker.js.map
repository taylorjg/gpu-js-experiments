{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/promise-worker/register.js","webpack:///./src/mastermindCommon.js","webpack:///./src/mastermindCpuWebWorker.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFY;;AAEZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;;AAErB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;;AAEA;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEI;AACP;AACA,yBAAyB,4CAAO;AAChC,2BAA2B,4CAAO;AAClC,eAAe;AACf,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEO;AACP;;AAEO;;AAEA;AACP;AACA;AACA;AACA;AACA,SAAS,4CAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU;AACV;;AAEO;AACP;AACA;;AAEO;AACP;;AAEA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA,mBAAmB,qBAAqB,UAAU,qBAAqB;AACvE,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;;AAEO;AACP,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC,sBAAsB,yBAAyB;AAC/C;;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACqB;AACpD;;AAE5B;AACA,uBAAuB;AACvB,eAAe,2DAAS;AACxB,qBAAqB,4DAAU;AAC/B,oBAAoB,yDAAoB,UAAU,8EAAoB;AACtE;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA,GAAG;AACH;AACA;;AAEA;AACA,kCAAkC,wBAAwB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAAqB;;;;;;;;;;;;;AC7BrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;;AAEO;AACP;;AAEO;AACP;;AAEO;AACP;AACA,gCAAgC,UAAU,IAAI,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEO;AACP","file":"0.bundle.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/mastermindCpuWebWorker.js\");\n","'use strict'\n\nfunction isPromise (obj) {\n  // via https://unpkg.com/is-promise@2.1.0/index.js\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function'\n}\n\nfunction registerPromiseWorker (callback) {\n  function postOutgoingMessage (e, messageId, error, result) {\n    function postMessage (msg) {\n      /* istanbul ignore if */\n      if (typeof self.postMessage !== 'function') { // service worker\n        e.ports[0].postMessage(msg)\n      } else { // web worker\n        self.postMessage(msg)\n      }\n    }\n    if (error) {\n      /* istanbul ignore else */\n      if (typeof console !== 'undefined' && 'error' in console) {\n        // This is to make errors easier to debug. I think it's important\n        // enough to just leave here without giving the user an option\n        // to silence it.\n        console.error('Worker caught an error:', error)\n      }\n      postMessage([messageId, {\n        message: error.message\n      }])\n    } else {\n      postMessage([messageId, null, result])\n    }\n  }\n\n  function tryCatchFunc (callback, message) {\n    try {\n      return { res: callback(message) }\n    } catch (e) {\n      return { err: e }\n    }\n  }\n\n  function handleIncomingMessage (e, callback, messageId, message) {\n    var result = tryCatchFunc(callback, message)\n\n    if (result.err) {\n      postOutgoingMessage(e, messageId, result.err)\n    } else if (!isPromise(result.res)) {\n      postOutgoingMessage(e, messageId, null, result.res)\n    } else {\n      result.res.then(function (finalResult) {\n        postOutgoingMessage(e, messageId, null, finalResult)\n      }, function (finalError) {\n        postOutgoingMessage(e, messageId, finalError)\n      })\n    }\n  }\n\n  function onIncomingMessage (e) {\n    var payload = e.data\n    if (!Array.isArray(payload) || payload.length !== 2) {\n      // message doens't match communication format; ignore\n      return\n    }\n    var messageId = payload[0]\n    var message = payload[1]\n\n    if (typeof callback !== 'function') {\n      postOutgoingMessage(e, messageId, new Error(\n        'Please pass a function into register().'))\n    } else {\n      handleIncomingMessage(e, callback, messageId, message)\n    }\n  }\n\n  self.addEventListener('message', onIncomingMessage)\n}\n\nmodule.exports = registerPromiseWorker\n","import * as U from './utils'\n\nexport const P = {\n  R: 0,\n  G: 1,\n  B: 2,\n  Y: 3,\n  BL: 4,\n  WH: 5\n}\n\nexport const ALL_PEGS = Object.values(P)\n\nexport const ALL_CODES =\n  Array.from(function* () {\n    for (const p0 of ALL_PEGS)\n      for (const p1 of ALL_PEGS)\n        for (const p2 of ALL_PEGS)\n          for (const p3 of ALL_PEGS)\n            yield [p0, p1, p2, p3]\n  }())\n\nexport const ALL_SCORES =\n  Array.from(function* () {\n    for (const blacks of U.range(5))\n      for (const whites of U.range(5 - blacks))\n        yield { blacks, whites }\n  }())\n    .filter(score => score.blacks + score.whites <= 4)\n    .filter(score => !(score.blacks === 3 && score.whites === 1))\n\nconst pegToString = peg => {\n  switch (peg) {\n    case P.R: return 'R'\n    case P.G: return 'G'\n    case P.B: return 'B'\n    case P.Y: return 'Y'\n    case P.BL: return 'b'\n    case P.WH: return 'w'\n    default: return '?'\n  }\n}\n\nexport const codeToString = code =>\n  code.map(pegToString).join('-')\n\nexport const scoreToString = score =>\n  'B'.repeat(score.blacks) + 'W'.repeat(score.whites)\n\nexport const INITIAL_GUESS = [P.R, P.R, P.G, P.G]\n\nexport const randomSecret = () => {\n  const chooseRandomPeg = () => {\n    const randomIndex = Math.floor((Math.random() * ALL_PEGS.length))\n    return ALL_PEGS[randomIndex]\n  }\n  return U.range(4).map(chooseRandomPeg)\n}\n\nconst countOccurrencesOfPeg = (peg, code) =>\n  (peg === code[0] ? 1 : 0) +\n  (peg === code[1] ? 1 : 0) +\n  (peg === code[2] ? 1 : 0) +\n  (peg === code[3] ? 1 : 0)\n\nconst countMatchingPegsByPosition = (code1, code2) =>\n  (code1[0] === code2[0] ? 1 : 0) +\n  (code1[1] === code2[1] ? 1 : 0) +\n  (code1[2] === code2[2] ? 1 : 0) +\n  (code1[3] === code2[3] ? 1 : 0)\n\nexport const evaluateScore = (code1, code2) => {\n  const add = (a, b) => a + b\n  const minOccurrences = ALL_PEGS.map(peg => {\n    const numOccurrences1 = countOccurrencesOfPeg(peg, code1)\n    const numOccurrences2 = countOccurrencesOfPeg(peg, code2)\n    return Math.min(numOccurrences1, numOccurrences2)\n  })\n  const sumOfMinOccurrences = minOccurrences.reduce(add)\n  const blacks = countMatchingPegsByPosition(code1, code2)\n  const whites = sumOfMinOccurrences - blacks\n  return { blacks, whites }\n}\n\nexport const sameScore = (score1, score2) =>\n  score1.blacks === score2.blacks &&\n  score1.whites === score2.whites\n\nexport const evaluatesToSameScore = (code1, score) => code2 =>\n  sameScore(evaluateScore(code1, code2), score)\n\nconst recursiveSolveStep = async (logger, attempt, calculateNewGuess, untried, history) => {\n  logger(`untried length: ${untried.length}`)\n  const guess = history.length === 0 ? INITIAL_GUESS :\n    untried.length === 1 ? untried[0] : await calculateNewGuess(untried)\n  const score = attempt(guess)\n  logger(`guess: ${codeToString(guess)}; score: ${scoreToString(score)}`)\n  const newHistory = [...history, { guess, score }]\n  if (score.blacks === 4) return newHistory\n  const newUntried = untried.filter(evaluatesToSameScore(guess, score))\n  return recursiveSolveStep(logger, attempt, calculateNewGuess, newUntried, newHistory)\n}\n\nexport const solve = async (logger, secret, calculateNewGuess) => {\n  logger(`secret: ${codeToString(secret)}`)\n  const attempt = guess => evaluateScore(secret, guess)\n  const start = performance.now()\n  const history = await recursiveSolveStep(logger, attempt, calculateNewGuess, ALL_CODES, [])\n  const end = performance.now()\n  logger(`numAttempts: ${history.length}`)\n  logger(`duration: ${(end - start).toFixed(2)}ms`)\n}\n","import registerPromiseWorker from 'promise-worker/register'\nimport { ALL_CODES, ALL_SCORES, evaluatesToSameScore } from './mastermindCommon'\nimport * as U from './utils'\n\nconst onCalculateNewGuess = untried => {\n  const initialBest = { count: Number.MAX_VALUE, guess: undefined }\n  const best = ALL_CODES.reduce((currentBest, allCode) => {\n    const maxCount = ALL_SCORES.reduce((currentMax, allScore) => {\n      const count = U.countWithPredicate(untried, evaluatesToSameScore(allCode, allScore))\n      return Math.max(currentMax, count)\n    }, 0)\n    return maxCount < currentBest.count\n      ? { count: maxCount, guess: allCode }\n      : currentBest\n  }, initialBest)\n  return best.guess\n}\n\nconst onUnknownMessage = message => {\n  console.log(`Unknown message: ${JSON.stringify(message)}`)\n}\n\nconst processMessage = message => {\n  switch (message.type) {\n    case 'calculateNewGuess': return onCalculateNewGuess(message.untried)\n    default: return onUnknownMessage(message)\n  }\n}\n\nregisterPromiseWorker(processMessage)\n","export const range = n =>\n  Array.from(Array(n).keys())\n\nexport const flatten = xss =>\n  [].concat(...xss)\n\nexport const countWithPredicate = (xs, p) =>\n  xs.reduce((acc, x) => acc + (p(x) ? 1 : 0), 0)\n\nexport const makeLogger = outputElement => message => {\n  const timestamp = new Date().toLocaleTimeString()\n  const timestampedMessage = `${timestamp}: ${message}`\n  const existingText = outputElement.innerText\n  outputElement.innerText = existingText\n    ? [existingText, timestampedMessage].join('\\n')\n    : timestampedMessage\n  console.log(timestampedMessage)\n}\n\nexport const makeLoggerNoTimestamp = outputElement => message => {\n  const existingText = outputElement.innerText\n  outputElement.innerText = existingText\n    ? [existingText, message].join('\\n')\n    : message\n  console.log(message)\n}\n\nexport const defer = thunk =>\n  deferFor(0, thunk)\n\nexport const deferFor = (ms, thunk) =>\n  setTimeout(thunk, ms)\n"],"sourceRoot":""}